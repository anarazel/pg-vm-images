env:
  CIRRUS_LOG_TIMESTAMP: true

  GAC: ENCRYPTED[388f06938c10a81478033cb9059c454d1d2e7580e9060e539f0be518b823b5a73cb1bc7c7fcefe351131c57c404c143f]
  GCP_PROJECT: pg-ci-images
  GCP_REPO: us-docker.pkg.dev/$GCP_PROJECT/ci
  GOOGLE_APPLICATION_CREDENTIALS: /gcp-service-account.json

task:
  #only_if: $CIRRUS_BRANCH == 'main' && $CIRRUS_REPO_OWNER == 'anarazel'
  container:
    dockerfile: LinuxPackerDockerfile
    cpu: 0.5
    memory: 256Mi
  gcp_key_file:
    path: $GOOGLE_APPLICATION_CREDENTIALS
    variable_name: GAC

  matrix:
    - name: freebsd-13-0
      env:
        PACKERFILE: googlecompute/freebsd.pkr.hcl

    - env:
        PACKERFILE: googlecompute/linux.pkr.hcl

      matrix:
        - name: bullseye
        - name: sid
        - name: sid-newkernel
        - name: sid-newkernel-uring

  skip: $CIRRUS_CRON != 'nightly' && !changesInclude('.cirrus.yml', 'LinuxPackerDockerfile', $PACKERFILE)

  init_script:
    - gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    - packer --version

  build_image_script: |
    DATE=$(date --utc +'%Y-%m-%dt%H-%M')

    gcloud auth list

    packer build \
      -only "*.${CIRRUS_TASK_NAME}" \
      -timestamp-ui \
      -force \
      -var "image_date=$DATE" \
      -var gcp_project=$GCP_PROJECT \
      "$PACKERFILE"
    gcloud compute images add-iam-policy-binding \
      --project "$GCP_PROJECT" \
      --member=allAuthenticatedUsers \
      --role=roles/compute.imageUser \
      pg-ci-${CIRRUS_TASK_NAME}-${DATE}


# Clean up old images regularly - after a while the individually small cost
# starts adding up
#
# Leave old images around for two weeks, to allow recreating CI failures
# precisely.
#
# Only do so after a run successfully creating all images, to avoid deleting
# all image versions when image creation has failed for a few days.
task:
  #only_if: $CIRRUS_BRANCH == 'main' && $CIRRUS_REPO_OWNER == 'anarazel'
  container:
    dockerfile: LinuxPackerDockerfile
    cpu: 0.5
    memory: 256Mi
  gcp_key_file:
    path: $GOOGLE_APPLICATION_CREDENTIALS
    variable_name: GAC

  name: cleanup-old
  depends_on:
    - freebsd-13-0
    - bullseye
    - sid
    - sid-newkernel
    - sid-newkernel-uring

  init_script:
    - gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

  cleanup_script: |
    images=$(gcloud compute images list \
      --project "$GCP_PROJECT" \
      --format "object value(name)" \
      --no-standard-images \
      --filter='creationTimestamp < -P2W')
    echo -e "list of images to delete:\n$images"
    if [ "$images" != '' ]; then
      gcloud compute images delete \
      --quiet \
      --project "$GCP_PROJECT" \
      $images
    else
      echo no images to delete
    fi


task:
  name: build-containers-linux
  compute_engine_instance:
    image_project: cirrus-images
    image: family/docker-builder
    platform: linux
    cpu: 2
    memory: 8G
  env:
    IMAGE: linux_debian_bullseye_ci
  skip: $CIRRUS_CRON != 'nightly' && !changesInclude('.cirrus.yml', 'scripts/linux_debian*', 'docker/linux_debian_bullseye_ci')

  gcp_key_file:
    path: $GOOGLE_APPLICATION_CREDENTIALS
    variable_name: GAC

  multibuilder_script:
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap

  init_script:
    - gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    - gcloud auth --quiet configure-docker us-docker.pkg.dev
    - docker info

  build_script: |
    docker buildx build \
      --cache-from type=registry,ref=$GCP_REPO/$IMAGE \
      --cache-to=type=inline \
      --platform linux/amd64,linux/arm64 \
      --tag $GCP_REPO/$IMAGE:latest \
      -f docker/$IMAGE \
      --push \
      .

    docker buildx imagetools inspect $GCP_REPO/$IMAGE:latest


docker_builder:
  name: build-containers-windows
  platform: windows
  os_version: 2019
  env:
    GOOGLE_APPLICATION_CREDENTIALS: c:/gcp-service-account.json

  skip: $CIRRUS_CRON != 'nightly' && !changesInclude('.cirrus.yml', 'docker/docker/windows_*', 'scripts/windows*')

  gcp_key_file:
    path: $GOOGLE_APPLICATION_CREDENTIALS
    variable_name: GAC

  init_script:
    - gcloud auth activate-service-account --key-file=%GOOGLE_APPLICATION_CREDENTIALS%
    - gcloud auth --quiet configure-docker us-docker.pkg.dev
    - docker info

  build_script: |
    docker pull %GCP_REPO%/windows_ci_base:latest || cmd /s /c
    docker build --cache-from %GCP_REPO%/windows_ci_base:latest --cache-from docker.io/cirrusci/windowsservercore:2019-2021.12.07 --tag windows_ci_base:latest -f docker/windows_ci_base .
    docker tag windows_ci_base:latest %GCP_REPO%/windows_ci_base:latest
    docker push %GCP_REPO%/windows_ci_base:latest

    docker pull %GCP_REPO%/windows_ci_vs_base:latest || cmd /s /c
    docker build --cache-from %GCP_REPO%/windows_ci_vs_base:latest --tag windows_ci_vs_base:latest -f docker/windows_ci_vs_base .
    docker tag windows_ci_vs_base:latest %GCP_REPO%/windows_ci_vs_base:latest
    docker push %GCP_REPO%/windows_ci_vs_base:latest

    docker pull %GCP_REPO%/windows_ci_vs_2019:latest || cmd /s /c
    docker build --cache-from %GCP_REPO%/windows_ci_vs_2019:latest --tag windows_ci_vs_2019:latest -f docker/windows_ci_vs_2019 .
    docker tag windows_ci_vs_2019:latest %GCP_REPO%/windows_ci_vs_2019:latest
    docker push %GCP_REPO%/windows_ci_vs_2019:latest


task:
  name: test-linux-container-amd64
  env:
    - GAC:
  depends_on:
    - build-containers-linux
  container:
    image: $GCP_REPO/linux_debian_bullseye_ci:latest
  test_script:
    - uname -a
    - xsltproc --version

task:
  name: test-linux-container-arm64
  env:
    - GAC:
  depends_on:
    - build-containers-linux
  arm_container:
    image: $GCP_REPO/linux_debian_bullseye_ci:latest
  test_script:
    - uname -a
    - xsltproc --version

task:
  name: test-windows-container-base-amd64
  env:
    - GAC:
  depends_on:
    - build-containers-windows
  windows_container:
    image: $GCP_REPO/windows_ci_base:latest
  test_script:
    - ver
    - set
    - where perl
    - perl --version
    - python --version
    - diff --version

task:
  name: test-windows-container-vs-2019-amd64
  env:
    - GAC:
  depends_on:
    - build-containers-windows
  windows_container:
    image: $GCP_REPO/windows_ci_vs_2019:latest
  test_script:
    - ver
    - set
    - where perl
    - perl --version
    - python --version
    - vcvarsall x64
    - bison --version
    - flex --version
